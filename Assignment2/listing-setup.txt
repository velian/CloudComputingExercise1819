# We are using a Google Cloud instance as host, which means we have to enable nested virtualization first

# Create a debian 10 image with the necessary license
gcloud compute disks create disk1 --image-project debian-cloud --image-family debian-10 --zone us-central1-b
gcloud compute images create nested-vm-image --source-disk disk1 --source-disk-zone us-central1-b --licenses "https://www.googleapis.com/compute/v1/projects/vm-options/global/licenses/enable-vmx"

# Create an instance based on that image
# --min-cpu-platform "Intel Haswell" is needed to ensure virtualization support
gcloud compute instances create example-nested-vm --zone us-central1-b --min-cpu-platform "Intel Haswell" --image nested-vm-image

# Conncect to the instance
gcloud compute ssh example-nested-vm

# Install qemu and libguestfs-tools (you might have to select a keyboard layout)
sudo apt-get update && sudo apt-get install qemu-kvm libguestfs-tools -y

# Create a file that contains your password for the VM
echo [your password] > password.txt

# Create the image with the password
sudo virt-builder debian-10 \
--size=10G \
--format qcow2 -o debian10.qcow2 \
--hostname debian10 \
--network \
--root-password file:password.txt

# We need to set up a bridge so the VM can communicate with the host
# Install required packages
sudo apt-get install uml-utilities qemu-kvm bridge-utils virtinst libvirt-daemon-system libvirt-clients -y

# Start default network
sudo virsh net-start default

# Create the bridge
sudo tunctl -t tap0
sudo ifconfig tap0 up
sudo brctl addif virbr0 tap0


# Start a screen session so you can easily switch between guest and host (press enter if the confirmation screen comes up)
screen

# Start the VM with access to the bridge (add -enable-kvm to enable KVM support)
# Login as root with the password you just set
sudo qemu-system-x86_64 -m 512 -net nic -net tap,ifname=tap0,script=no -serial mon:stdio -nographic debian10.qcow2

# Start up the VM's network access
ip link set dev ens3 up
dhclient -v ens3

# Leave the screen session with CTRL+A, CTRL+D
# You can return to it with screen -r
